<?xml version="1.0" encoding="UTF-8"?>
<project name="JDBX" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant" default="help">

	<property name="lib"               value="${basedir}/lib"/>
	<property name="src"               value="${basedir}/src"/>
	<property name="src.java"          value="${src}/java"/>
	<property name="src.demo"          value="${src}/demo"/>
	<property name="src.test"          value="${src}/test"/>
	<property name="build"             value="${basedir}/tmp"/>
	<property name="build.bin"         value="${build}/bin"/>
	<property name="build.bin.java"    value="${build.bin}/java"/>
	<property name="build.bin.test"    value="${build.bin}/test"/>
	<property name="build.bin.demo"    value="${build.bin}/demo"/>
	<property name="build.doc"         value="${build}/doc"/>
	<property name="build.javadoc"     value="${build}/javadoc"/>
	<property name="reports.dir"       value="${build}/reports"/>
	<property name="reports.xml.dir"   value="${reports.dir}/junit-xml"/>
	<property name="reports.html.dir"  value="${reports.dir}/junit-html"/>
	<property name="reports.coverage"  value="${reports.dir}/coverage"/>
	
	
	<description>
    	Ant build file for JDBX 
    </description>
	

	<!-- paths -->
	
	
	<path id="run.path">
		<pathelement location="${build.bin.java}"/>
	</path>
	
	
	<path id="test.path">
		<path refid="run.path"/>
		<pathelement location="${build.bin.test}"/>
		<fileset dir="${lib}\test">
			<include name="*.jar" />
		</fileset>
	</path>
	
	
	<path id="demo.path">
		<path refid="run.path"/>
		<pathelement location="${build.bin.demo}"/>
	</path>
	
	
	<!-- targets -->
		
	<target name="help" description="help">
    	<echo>Ant targets: clear | compile | coverage | javadoc | jar | dist | resolve</echo>
    </target>
	
	
	<target name="clear" description="clears the build directory">
    	<delete dir="${build}"/>	
    </target>
	

 	<target name="compile" description="compiles all java classes" 
 		depends="compile.java, compile.test, compile.demo">
	</target>
		
		
 	<target name="compile.java" description="compiles src/java">
    	<mkdir dir="${build.bin.java}"/>
		<javac srcdir="${src.java}" destdir="${build.bin.java}" excludes="**/package-info.java" 
			debug="true" includeantruntime="false">
		</javac>
	</target>

		
 	<target name="compile.demo" description="compiles src/demo" depends="compile.java">
    	<mkdir dir="${build.bin.demo}"/>
		<javac srcdir="${src.demo}" destdir="${build.bin.demo}" debug="true" includeantruntime="false" classpathref="run.path"/>
	</target>

		
 	<target name="compile.test" description="compiles src/test">
    	<mkdir dir="${build.bin.test}"/>
		<javac srcdir="${src.test}" destdir="${build.bin.test}"	debug="true" includeantruntime="false" encoding="UTF-8"
			classpathref="test.path"/>
	</target>


	<target name="coverage" depends="compile" xmlns:jacoco="antlib:org.jacoco.ant">
		<property name="jacoco.exec" value="${build}/reports/jacoco.exec"/>
		
		<taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml" classpathref="test.path"/>
		<mkdir dir="${reports.xml.dir}"/>
		
		<jacoco:coverage destfile="${jacoco.exec}" includes="org.jdbx.**" excludes="org.jdbx.test.*">
			<junit fork="true" forkmode="once">
				<classpath refid="test.path"/>
				<formatter type="xml" />
				<test name="${testcase}" todir="${reports.xml.dir}" if="testcase" />
				<batchtest todir="${reports.xml.dir}" unless="testcase">
					<fileset dir="${src.test}">
						<include name="**/*Test.java" />
						<exclude name="**/JdbxTest.java" />
					</fileset>
				</batchtest>
			</junit>
		</jacoco:coverage>
		
		<junitreport todir="${reports.xml.dir}">
			<fileset dir="${reports.xml.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${reports.html.dir}" />
		</junitreport>

		<jacoco:report>
		    <executiondata>
		        <file file="${jacoco.exec}"/>
		    </executiondata>
					
		    <structure name="JDBX">
		        <classfiles>
		            <fileset dir="${build.bin.java}"/>
		        </classfiles>
		        <sourcefiles encoding="UTF-8">
		            <fileset dir="${src.java}"/>
		        </sourcefiles>
		    </structure>
		    <html destdir="${reports.coverage}"/>
		</jacoco:report>
			
	</target>

	
 	<target name="dist" description="creates distribution zip" depends="jar">
 		<property name="jdbx.zip" value="jdbx-${version}.zip"/>
		<zip destfile="${build}/${jdbx.zip}">
			<fileset dir="${build}" includes="*.jar"/>
			<fileset dir="${build}" includes="javadoc/**"/>
			<zipfileset dir="${src}" prefix="src"/>
			<fileset dir="${basedir}">
				<include name="build.*"/>
				<include name=".project"/>
				<include name=".classpath"/>
				<include name="ivy.xml"/>
			</fileset>
		</zip>
	</target>

		
	<target name="jar" description="builds the JDBX jar file" depends="version">
		<property name="jdbx.jar" value="jdbx-${version}.jar"/>
		<jar destfile="${build}/${jdbx.jar}">
    		<fileset dir="${build.bin.java}"/>
			<manifest>
				<attribute name="JDBX-Version" value="${version}"/>
				<attribute name="JDBX-Website" value="https://github.com/jdlib/jdbx"/>
			</manifest>
		</jar>
	</target>
	
	
    <target name="javadoc" description="build javadoc">
    	<mkdir dir="${build.javadoc}"/>
        <javadoc access="public" 
        	destdir="${build.javadoc}" doctitle="JDBX Javadoc" 
        	packagenames="org.jdbx.*" 
        	source="1.8" 
        	sourcepath="${src.java}" splitindex="true" use="true"/>
    </target>


	<target name="resolve" description="retrieve dependencies with ivy">
		<ivy:retrieve pattern="lib/[conf]/[artifact]-[revision].[ext]"/>
	</target>
	
	
    <target name="version" description="set version property" depends="compile.java">
		<java classpathref="run.path" classname="org.jdbx.Jdbx" outputproperty="version"/>
		<echo>JDBX version ${version}</echo>
	</target>
	
	
</project>
